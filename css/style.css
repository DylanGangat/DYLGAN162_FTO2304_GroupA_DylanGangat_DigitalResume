@import url("https://fonts.googleapis.com/css2?family=Montserrat:wght@400;700&family=Press+Start+2P&display=swap");

/* Custom properties */

:root {
  /* Font family */
  --ff-primary: "Montserrat", sans-serif;
  --ff-secondary: "Press Start 2P", cursive;

  /* Font weight*/
  --fw-400: 400;
  --fw-700: 700;

  /* Font size */
  --fs-200: 0.8rem;
  --fs-300: 1rem;
  --fs-400: 1.125rem; /* body */
  --fs-500: 1.3125rem; /* h3 */
  --fs-600: 1.5rem; /* h2 */
  --fs-900: 2rem; /* h1 */

  --bg-body: #ebe8e0;
  --clr-neutral: #fff;
  --clr-primary-400: #1e1926;
  --clr-secondary-400: #0e14c5;
  --clr-accent-red: #ca0001;
  --clr-accent-purple: #4d2aa5;

  --border-solid: 5px solid currentColor;
  --border-dotted: 5px dotted currentColor;
  --animate: all 350ms var(--ease-in-out);

  --header-max-height: 4.5rem;

  /* Timing functions */

  --ease-in: cubic-bezier(0.75, 0, 1, 1);
  --ease-out: cubic-bezier(0.215, 0.61, 0.355, 1);
  --ease-in-out: cubic-bezier(0.645, 0.045, 0.355, 1);
  --ease: cubic-bezier(0.44, 0.21, 0, 1);
}

/* Font changes to h1, h2, h3 */

@media (min-width: 50em) {
  :root {
    --fs-500: 1.5rem; /* h3 */
    --fs-600: 2.25rem; /* h2 */
    --fs-900: 3rem; /* h1 */
  }
}

/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margin */
* {
  margin: 0;
  padding: 0;
  font: inherit;
}

/* Remove list styles on ul, ol elements */
ul,
ol {
  list-style: none;
}

a {
  text-decoration: none;
  color: inherit;
}

/* Avoid text overflows */

p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
}

/* Set core root defaults */

html:focus-within {
  scroll-behavior: smooth;
}

/* Changes default colors when highlighting text */

::selection {
  color: var(--clr-neutral);
  background-color: var(--clr-secondary-400);
}

.section-title::selection {
  color: var(--clr-neutral);
  background-color: var(--clr-accent-red);
}

/* Set core body defaults */
body {
  font-family: var(--ff-primary);
  font-weight: var(--fw-400);
  font-size: var(--fs-400);
  color: var(--clr-primary-400);
  background-color: var(--bg-body);
  line-height: 1.5;
  overflow-x: hidden; /* I used this because I have my nav translated off the right of the page and I need to hide it  */
}

/* Make images easier to work with */

img,
picture,
svg {
  max-width: 100%;
  display: block;
}

img {
  border: var(--border-solid);
  transition: var(--animate);
}

/* Image Animation */

img:is(:hover, :focus) {
  color: var(--clr-secondary-400);
  border: var(--border-dotted);
}

/* ==== Utilities ==== */

.container {
  --max-width: 74.75rem;
  width: min(100% - 2rem, var(--max-width));
  margin-inline: auto;
}

section,
footer {
  padding-block: 2rem; /* shothand for padding vertically */
}

@media (min-width: 50em) {
  section {
    padding-block: 4rem;
  }
  footer {
    padding-block: 3rem;
  }
}

/* Responsive grids */

.even-columns {
  display: grid;
  gap: 1.5rem;
}

@media (min-width: 50em) {
  .even-columns {
    grid-auto-flow: column;
    grid-auto-columns: 1fr;
  }
}

/* responsive auto grid where it has a min and max value. The grid item can grow till there is a minimum of 250px width extra available and then it's sibling will automatic be placed next to it in a column. The min function basically decides out of the two values which is the smallest so the minimum value for each grid item will be 250px but when on phones and is smaller than 250px it will become 100% which will prevent card from overflowing it's parent container. */

.grid-auto-fit {
  display: grid;
  gap: 1.5rem;
  grid-template-columns: repeat(auto-fit, minmax(min(100%, 250px), 1fr));
}

/* svg icons  */

.icon {
  height: 35px;
  width: 35px;
}

/* Logo Animation */

.logo:is(:hover, :focus) span,
.logo:is(:hover, :focus) svg {
  color: var(--clr-secondary-400);
}

/* spacing all items except the first child in a container :where has 0 specificity */

.flow > *:where(:not(:first-child)) {
  margin-top: var(--flow-spacer, 1rem);
}

/* Gives space between elements */

.spacer {
  margin-top: var(--spacer, 2rem);
}

@media (min-width: 50em) {
  .spacer {
    margin-top: var(--spacer, 3rem);
  }
}

.mx-auto {
  margin-inline: auto;
}

b {
  font-weight: var(--fw-700);
}

.color-secondary {
  color: var(--clr-secondary-400);
}

.text-center {
  text-align: center;
}

.uppercase {
  text-transform: uppercase;
}

/* Best practice when hideing an element but screenreaders will still be able to have access to it */

.visually-hidden {
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

/* === CTA Button === */

.btn {
  display: inline-flex;
  gap: 1rem;
  align-items: center;
  justify-content: center;
  font-family: var(--ff-secondary);
  font-size: var(--fs-300);
  width: min(100%, 12.625rem);
  text-transform: uppercase;
  color: inherit;
  background-color: var(--clr-neutral);
  padding: 1em;
  border: var(--border-solid);
  text-decoration: none;
  transition: var(--animate);
}

/* CTA Animation */

.btn:is(:hover, :focus) {
  color: var(--clr-neutral);
  background-color: var(--clr-secondary-400);
  border: var(--border-dotted);
}

/* To change the color of svg */

.btn:is(:hover, :focus-visible) .github-icon {
  fill: var(--clr-neutral);
}

.btn .icon {
  height: 25px;
  width: 25px;
}

/* ==== Typography ==== */

.ff-secondary {
  font-family: var(--ff-secondary);
}

.site-title,
.section-title {
  font-family: var(--ff-secondary);
  line-height: 1.2;
}

.site-title {
  font-size: var(--fs-900);
  color: var(--clr-secondary-400);
}

.section-title {
  font-size: var(--fs-600);
  color: var(--clr-accent-red);
}

/* ==== Header Section ==== */

.site-header {
  position: sticky;
  top: 0;
  z-index: 999;
  background-color: var(--bg-body);
  padding: 1rem 0;
  border-bottom: var(--border-solid);
  max-height: var(--header-max-height);
}

/* Nav template for when not using a hamburger-menu */

/* .main-nav {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  align-items: center;
  font-family: var(--ff-secondary);
  font-weight: var(--fw-700);
  letter-spacing: 0.05rem;
}

.main-nav .nav-list {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  font-size: var(--fs-200);
  text-transform: uppercase;
  transition: var(--animate);
}

@media (min-width: 50em) {
  .main-nav {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
  }

  .main-nav .nav-list {
    gap: 1rem;
  }
} */



/* === Basical styles for my nav accross the entire site === */

.main-nav {
  display: flex;
  justify-content: space-between;
}

.logo {
  font-family: var(--ff-secondary);
  font-size: var(--fs-200);
  display: flex;
  align-items: center;
  gap: 0.5rem;
  text-decoration: none;
  color: inherit;
  transition: var(--animate);
}

/* Hide hamburger menu on desktop */

.menu-toggle {
  display: none;
}

.main-nav {
  display: flex;
  gap: 1rem;
  align-items: center;
  font-family: var(--ff-secondary);
  font-weight: var(--fw-700);
  letter-spacing: 0.05rem;
}

.main-nav .nav-list {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 1rem;
  font-size: var(--fs-200);
  text-transform: uppercase;
  transition: var(--animate);
}

/* Main nav Animation */

.main-nav .nav-list a:is(:hover, :focus) {
  color: var(--clr-secondary-400);
}

/* === Display hamburger menu on devices < 50em and these style will only apply under width < 50em === */

@media (max-width: 50em) {
  .menu-toggle {
    display: block;
    cursor: pointer;
    transition: var(--animate);
  }

  .menu-toggle:is(:hover, :focus) svg {
    color: var(--clr-secondary-400);
  }

  /* Hide nav on mobiles */
  .main-nav .nav-list.show {
    visibility: hidden; /* hiding nav list until hamburger is toggle */
  }

  /* If checkbox is checked then display nav */

  .hamburger-menu:checked + .nav-list.show {
    visibility: visible;
    transform: translateX(0);
  }

  .main-nav .nav-list {
    background-color: var(--bg-body);
    flex-direction: column;
    gap: 0;
    position: absolute;
    top: var(--header-max-height); /* This is the height of the header  */
    left: 0;
    width: 100%;
    transform: translateX(100%);
    transition: var(--animate);
  }

  /* I made it width: 100%; so it will allow the entire row to be a link instead of just the text */

  .main-nav .nav-list li {
    width: 100%;
    border-bottom: var(--border-solid);
  }

  .main-nav .nav-list a {
    display: flex;
    justify-content: center;
    padding: 1rem;
  }
}

/* ==== Hero Section ==== */

/* Slides in from left*/

@keyframes slideFromLeft {
  from {
    opacity: 0;
    transform: translateX(-200%);
  }

  to {
    opacity: 1;
    transform: translateX(0);
  }
}

/* Slides in from bottom*/

@keyframes slideFromBottom {
  from {
    opacity: 0;
    transform: translateY(200%);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Slides in from right*/

@keyframes slideFromRight {
  from {
    opacity: 0;
    transform: translateX(200%);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

.hero-content .site-title {
  animation: slideFromLeft 3s var(--ease-in-out);
}

.hero-content .site-subtitle {
  animation: slideFromLeft 3.2s var(--ease-in-out);
}

.hero-content :is(.cta-group, .tech-stack-group) {
  animation: slideFromBottom 3.2s var(--ease-in-out);
}

.hero-image {
  animation: slideFromRight 3s var(--ease-in-out);
}

.hero .hero-content {
  --flow-spacer: 1.5rem;
  text-align: center;
}

.hero-content .cta-group {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  gap: 1rem;
}

/* Tech stack group */

.tech-stack-group {
  border-top: var(--border-dotted);
  margin-top: 1.5rem;
  padding-top: 1.5rem;
  font-family: var(--ff-secondary);
}

@media (min-width: 50em) {
  .tech-stack-group {
    padding-top: 2rem;
    margin-top: 2rem;
  }
}

.tech-stack-group .tech-stack-title {
  font-size: var(--fs-300);
}

.tech-stack-group .tech-stack-list {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-wrap: wrap;
  gap: 1rem;
  font-size: var(--fs-200);
}

.tech-stack-group .tech-stack-item .icon {
  height: 25px;
  width: 25px;
}

.tech-stack-group .tech-stack-item {
  display: flex;
  align-items: center;
  gap: 1rem;
}

@media (min-width: 50em) {
  .hero .hero-content {
    text-align: start;
  }

  .hero-content .cta-group,
  .tech-stack-group .tech-stack-list {
    justify-content: flex-start;
  }
}
/* ==== About Section ==== */

.about .about-content {
  align-self: center;
}

.education-list {
  display: grid;
  gap: 1rem;
  font-size: var(--fs-300);
}

/* ==== Education Section ==== */

.education-list .education-item {
  display: grid;
  grid-template-columns: max-content 1fr;
  gap: 0.5rem;
}

/* ==== Projects Section ==== */

.card {
  display: grid;
  gap: 0.5rem;
  border: var(--border-dotted);
  background-color: var(--bg-body);
  padding: 0.75rem;
  transition: var(--animate);
}

/* Card Animation */

.card:is(:hover, :focus) {
  /* color: var(--clr-secondary-400); */
  transform: translateY(-16px);
  border: var(--border-solid);
}

.card .card-title {
  font-family: var(--ff-secondary);
  font-size: var(--fs-500);
}

.card img {
  height: 13.75rem;
  width: 100%;
  object-fit: cover;
}

.card .tag-group {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  gap: 0.5rem;
  font-family: var(--ff-secondary);
  font-size: var(--fs-200);
  text-transform: uppercase;
}

.card .tag-group > * {
  padding: 0.25em;
  flex: 0 1 5.03rem;
}

/* Can have an animation on tag for when car colour changes */

.card .tag {
  transition: var(--animate);
}

/* Tags animation */

.card .tag-group .tag-html {
  color: var(--clr-secondary-400);
  border: var(--border-solid);
}

.card .tag-group .tag-css {
  color: var(--clr-accent-purple);
  border: var(--border-solid);
}

.card .tag-group .tag-figma {
  color: var(--clr-accent-red);
  border: var(--border-solid);
}

.card .link-group {
  display: flex;
  gap: 0.5rem;
}

.card .link-group .icon {
  transition: var(--animate);
}

/* Icon Animation */

.card .link-group .icon:is(:hover, :focus) {
  transform: translateY(-2px);
}

/* ==== Contact Section ==== */

.contact-form address {
  font-family: var(--ff-secondary);
  font-size: var(--fs-200);
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.5rem;
}

.contact-form address a {
  border-bottom: var(--border-dotted);
  transition: var(--animate);
}

/* Contact form address animation */

.contact-form address a:is(:hover, :focus) {
  color: var(--clr-secondary-400);
  border-bottom: var(--border-dotted);
}

.contact-form form {
  display: grid;
  gap: 1rem;
  max-width: 25rem;
}

.contact-form .form-group {
  display: grid;
  gap: 0.25rem;
}
.contact-form .form-group label {
  font-family: var(--ff-secondary);
  font-size: var(--fs-300);
  justify-self: start;
}

.contact-form .form-group :is(input, textarea) {
  color: inherit;
  border: var(--border-solid);
  padding: 0.5rem;
  width: 100%;
  /* box-shadow: 5px 5px var(--clr-accent-red); */
}

/* styles the placeholder text */
:is(input, textarea)::placeholder {
  color: var(--clr-primary-400);
}

.contact-form button {
  font-family: var(--ff-secondary);
  justify-self: center;
  padding: 1rem;
  color: var(--clr-primary-400);
  border: var(--border-solid);
  background-color: var(--clr-neutral);
  cursor: pointer;
  transition: var(--animate);
}

/* Submit button animation */

.contact-form button:is(:hover, :focus) {
  color: var(--clr-neutral);
  background-color: var(--clr-secondary-400);
  border: var(--border-dotted);
}

/* ==== Footer Section ==== */

.site-footer {
  font-family: var(--ff-secondary);
  color: var(--clr-neutral);
  background-image: url("/images/backgrounds/footer-background-2.gif");
  background-color: var(--clr-primary-400);
  background-position: top;
}

@media (min-width: 50em) {
  .site-footer {
    background-image: url("/images/backgrounds/footer-background-1.gif");
  }
}

.site-footer .footer-content {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  gap: 1rem;
  font-size: var(--fs-200);
}

.site-footer .footer-content > * {
  background-color: #000;
}

@media (min-width: 50em) {
  .site-footer .footer-content {
    flex-direction: row;
  }
}

.site-footer address {
  display: flex;
  gap: 1rem;
}

.site-footer address .icon {
  transition: var(--animate);
}

/* Icon Animation */

.site-footer address .icon:is(:hover, :focus) {
  transform: translateY(-2px);
}
